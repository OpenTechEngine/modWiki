Folder structure (ETQW)
=======================

<div style="padding: 1px; border: 0px solid #000000" align="left">
<font size="18px"><font color="black">![](/images/images_f_f9_Etqwsquare_bg.png) The information on this page is specific to [Enemy Territory: Quake Wars](http://web.archive.org/web/20121206024939/http://www.modwiki.net:80/wiki/Enemy_Territory:_Quake_Wars).</font></font>

</div>

------------------------------------------------------------------------

This is the folder structure of ETQW. It should be noted that these folders are not present in the base folder itself. Instead, these folders and the assets contained therein are stored in [PK4 archives](PK4\_(file\_format)).

<table>
<colgroup>
<col width="2%" />
<col width="8%" />
</colgroup>
<tbody>
<tr class="odd">
<td align="left"><p><font color="#000"></p>
<div style="padding: .4em .9em .9em">
<h3>Folder structure:</h3>
<div style="text-align: left; margin-left: 10px">
<p><font size="14px"><code>

* /[base](Folder_structure_(ETQW)#.2Fbase)
** /[af](Folder_structure_(ETQW)#.2Fbase.2Faf)
** /[atlas](Folder_structure_(ETQW)#.2Fbase.2Fatlas)
** /[atmosphere](Folder_structure_(ETQW)#.2Fbase.2Fatmosphere)
** /[bindings](Folder_structure_(ETQW)#.2Fbase.2Fbindings)
** /[bots](Folder_structure_(ETQW)#.2Fbase.2Fbots)
** /[commandmaps](Folder_structure_(ETQW)#.2Fbase.2Fcommandmaps)
** /[decals](Folder_structure_(ETQW)#.2Fbase.2Fdecals)
** /[def](Folder_structure_(ETQW)#.2Fbase.2Fdef)
** /[demos](Folder_structure_(ETQW)#.2Fbase.2Fdemos)
** /[effects](Folder_structure_(ETQW)#.2Fbase.2Feffects)
** /[env](Folder_structure_(ETQW)#.2Fbase.2Fenv)
** /[generated](Folder_structure_(ETQW)#.2Fbase.2Fgenerated)
** /[guis](Folder_structure_(ETQW)#.2Fbase.2Fguis)
*** /[themes](Folder_structure_(ETQW)#.2Fbase.2Fguis.2Fthemes)
** /[heightmaps](Folder_structure_(ETQW)#.2Fbase.2Fheightmaps)
** /[imposters](Folder_structure_(ETQW)#.2Fbase.2Fimposters)
** /[levelshots](Folder_structure_(ETQW)#.2Fbase.2Flevelshots)
** /[lights](Folder_structure_(ETQW)#.2Fbase.2Flights)
** /[localization](Folder_structure_(ETQW)#.2Fbase.2Flocalization)
*** /[fonts](Folder_structure_(ETQW)#.2Fbase.2Flocalization.2Ffonts)
*** /[locstr](Folder_structure_(ETQW)#.2Fbase.2Flocalization.2Flocstr)
** /[logs](Folder_structure_(ETQW)#.2Fbase.2Flogs)
** /[mapinfo](Folder_structure_(ETQW)#.2Fbase.2Fmapinfo)
** /[maps](Folder_structure_(ETQW)#.2Fbase.2Fmaps)
** /[masks](Folder_structure_(ETQW)#.2Fbase.2Fmasks)
** /[materials](Folder_structure_(ETQW)#.2Fbase.2Fmaterials)
** /[megatextures](Folder_structure_(ETQW)#.2Fbase.2Fmegatextures)
** /[menus](Folder_structure_(ETQW)#.2Fbase.2Fmenus)
** /[models](Folder_structure_(ETQW)#.2Fbase.2Fmodels)
** /[quickchat](Folder_structure_(ETQW)#.2Fbase.2Fquickchat)
** /[renderlight](Folder_structure_(ETQW)#.2Fbase.2Frenderlight)
** /[renderprogs](Folder_structure_(ETQW)#.2Fbase.2Frenderprogs)
** /[script](Folder_structure_(ETQW)#.2Fbase.2Fscript)
** /[screenshots](Folder_structure_(ETQW)#.2Fbase.2Fscreenshots)
** /[skins](Folder_structure_(ETQW)#.2Fbase.2Fskins)
** /[sounds](Folder_structure_(ETQW)#.2Fbase.2Fsounds)
** /[specs](Folder_structure_(ETQW)#.2Fbase.2Fspecs)
** /[src](Folder_structure_(ETQW)#.2Fbase.2Fsrc)
** /[stuff](Folder_structure_(ETQW)#.2Fbase.2Fstuff)
** /[surfacetypes](Folder_structure_(ETQW)#.2Fbase.2Fsurfacetypes)
** /[templates](Folder_structure_(ETQW)#.2Fbase.2Ftemplates)
** /[textures](Folder_structure_(ETQW)#.2Fbase.2Ftextures)
** /[tools](Folder_structure_(ETQW)#.2Fbase.2Ftools)
** /[vehicles](Folder_structure_(ETQW)#.2Fbase.2Fvehicles)
** /[video](Folder_structure_(ETQW)#.2Fbase.2Fvideo)

</code></font></p>
</div>
</div>
<p></font></p></td>
<td align="left"><h3>/base</h3>
<p>This is the default ETQW mod directory. The contents of this directory include all the game assets used in the game. Mods for ETQW should be created in their own directory in the main ETQW installation folder as a brother folder to /base. In the engine code your mod base name is always called &quot;base&quot; no matter the actual physical name. You set the game to use a different folder as base with the [fs_game](Fs_game_(cvar)) cvar.</p>
<p>You can also set the [fs_game_base](Fs_game_base_(cvar)) cvar to let you base a mod off base game and your own content as usual as well as an additional mod.</p>
<p><strong>Note:</strong> While you probably want to work on your mod with the assets decompressed and available in the ETQW folder structure, when you release your mod you should put them into .[PK4](PK4_(file_format)) files.</p>
<h3>/base/af</h3>
<p>This folder contains .[AF](AF_(file_format)) files which setup the [articulated figure declarations](Af_(decl)).</p>
<h3>/base/atlas</h3>
<h3>/base/atmosphere</h3>
<p>This folder contains .ATM files which setup the atmosphere declarations.</p>
<h3>/base/bindings</h3>
<p>This folder contains .BINDING files which setup the key bindings declarations.</p>
<h3>/base/bots</h3>
<p>This folder contains a .[DAT](DAT_(file_format)) file with the bots' names as a series of strings.</p>
<h3>/base/commandmaps</h3>
<p>This folder contains .[TGA](TGA_(file_format)) files for the various command maps.</p>
<h3>/base/decals</h3>
<p>This folder contains .DECAL files which setup the decal declarations.</p>
<h3>/base/def</h3>
<p>This folder contains .[DEF](DEF_(file_format)) files which contain [declarations](Declarations) for entities, models and modelexport.</p>
<h3>/base/demos</h3>
<p>This folder contains .NDM files which are network gameplay recordings.</p>
<h3>/base/effects</h3>
<p>This folder contains .EFFECT files which setup the effect declarations.</p>
<h3>/base/env</h3>
<p>This folder contains [images](Images) for [environment maps](Cube_maps) which are textures applied to the inside faces of a skybox to give the appearance of large spaces and to ambient lights to simulate bounced light.</p>
<h3>/base/generated</h3>
<p>This folder contains compiled declarations, assets in binary format and hashed compressed textures for use with the retail game. Files here follow the same folder hierarchy.</p>
<h3>/base/guis</h3>
<p>This folder contains .[GUI](GUI_(file_format)) files which setup the gui declarations.</p>
<h3>/base/guis</h3>
<p>This folder contains .GUITHEME files which setup the gui theme declarations.</p>
<h3>/base/heightmaps</h3>
<p>This folder contains .[TGA](TGA_(file_format)) files for a map's height determination.</p>
<h3>/base/imposters</h3>
<p>This folder contains .IMP files which setup the imposter and imposter generator declarations.</p>
<h3>/base/levelshots</h3>
<p>This folder contains .[TGA](TGA_(file_format)) files for a map's screenshot in the server browser and loading screen.</p>
<h3>/base/lights</h3>
<p>This folder contains .[TGA](TGA_(file_format)) files which become available for use in [light materials](Material_(decl)) to create 'light styles' that modulate what light projects onto the surfaces of the world.</p>
<h3>/base/localization</h3>
<p>Contains .[LANG](LANG_(file_format)) Files for text and sound files for sound localization (.[OGG](OGG_(file_format)) or .[WAV](WAV_(file_format))).</p>
<h3>/base/localization/fonts</h3>
<h3>/base/localization/locstr</h3>
<p>This folder contains .LOCSTR files which setup the localization string declarations.</p>
<h3>/base/logs</h3>
<p>This folder contains .CSV files which store proficiency and experience point logs.</p>
<h3>/base/mapinfo</h3>
<p>This folder contains .MD files which setup the map information declarations.</p>
<p><br /></p>
<h3>/base/maps</h3>
<p>This folder contains [all the files](Maps_(folder)) for each map.</p>
<h3>/base/masks</h3>
<p>This folder contains .[TGA](TGA_(file_format)) files for a map's game masks used for determining where the MCP can go, where players start suffering out of bounds damage, etc.</p>
<h3>/base/materials</h3>
<p>This folder contains .[MTR](MTR_(file_format)) files which setup the [material declarations](Material_(decl)).</p>
<h3>/base/megatextures</h3>
<p>This folder contains all the files for each megatexture.</p>
<h3>/base/menus</h3>
<p>This folder contains .RADIALMENU files which setup the radial menu declarations.</p>
<h3>/base/models</h3>
<p>This folder contains numerous sub-directories where the following file formats can be found:</p>
<dl>
<dt>Model formats</dt>
<dd>.[ASE](ASE_(file_format)), .[LWO](LWO_(file_format)), .[MD5](MD5_(file_format)).
</dd>
<dt>Image formats</dt>
<dd>.[TGA](TGA_(file_format)), .[DDS](DDS_(file_format)), .[JPG](JPG_(file_format)).
</dd>
<dt>Other formats</dt>
<dd>.[CM](CM_(file_format)).
</dd>
</dl>
<h3>/base/quickchat</h3>
<p>This folder contains .QC files which setup the quickchat declarations.</p>
<h3>/base/renderlight</h3>
<p>This folder contains .RLT files which setup how to pre-light a megatexture.</p>
<h3>/base/renderprogs</h3>
<p>This folder contains .RPROG files which setup the render program declarations.</p>
<h3>/base/script</h3>
<p>This folder contains .[SCRIPT](SCRIPT_(file_format)) files.</p>
<h3>/base/screenshots</h3>
<h3>/base/skins</h3>
<p>This folder contains .[SKIN](SKIN_(file_format)) files which setup the [skin declarations](Skin_(decl)).</p>
<h3>/base/sounds</h3>
<p>This folder contains .[SNDSHD](SNDSHD_(file_format)) files which setup the [sound declarations](Sound_(decl)).</p>
<h3>/base/specs</h3>
<h3>/base/src</h3>
<h3>/base/stuff</h3>
<p>This folder contains .STUFF files which setup the stuff type declarations.</p>
<h3>/base/surfacetypes</h3>
<p>This folder contains .STP files which setup the surface type declarations as well as the .STMAP files which are generated.</p>
<h3>/base/templates</h3>
<p>This folder contains .TEMPLATE files which setup the template declarations.</p>
<h3>/base/textures</h3>
<p>This folder contains .[TGA](TGA_(file_format)) or .[JPG](JPG_(file_format)) files which become available for use as assets in [material declarations](Material_(decl)).</p>
<h3>/base/tools</h3>
<h3>/base/vehicles</h3>
<p>This folder contains .VSCRIPT files which setup the vehicle declarations.</p>
<h3>/base/video</h3>
<p>This folder contains .[BIK](BIK_(file_format)) files which are movies.</p></td>
</tr>
</tbody>
</table>



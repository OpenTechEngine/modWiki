Description
-----------

This CVar sets an optimisation to scissor clip parts of polygons not visible through visportals, preventing the fragment shader from being run on non-visible geometry. It also enables light scissors, which limit each light's calculation to the area of screen space corresponding to its volume.

Usage
-----

At the console type...

    r_useScissor [bool]

Parameters
----------

-   [bool]
    -   0 - Disable.
    -   1 - Enable.

Flags
-----

<table>
<colgroup>
<col width="33%" />
<col width="33%" />
<col width="33%" />
</colgroup>
<thead>
<tr class="header">
<th align="left">Flag</th>
<th align="left">Enabled</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">CVAR_ALL</td>
<td align="left"></td>
<td align="left">all flags</td>
</tr>
<tr class="even">
<td align="left">CVAR_BOOL</td>
<td align="left">X</td>
<td align="left">variable is a boolean</td>
</tr>
<tr class="odd">
<td align="left">CVAR_INTEGER</td>
<td align="left"></td>
<td align="left">variable is an integer</td>
</tr>
<tr class="even">
<td align="left">CVAR_FLOAT</td>
<td align="left"></td>
<td align="left">variable is a float</td>
</tr>
<tr class="odd">
<td align="left">CVAR_SYSTEM</td>
<td align="left"></td>
<td align="left">system variable</td>
</tr>
<tr class="even">
<td align="left">CVAR_RENDERER</td>
<td align="left">X</td>
<td align="left">renderer variable</td>
</tr>
<tr class="odd">
<td align="left">CVAR_SOUND</td>
<td align="left"></td>
<td align="left">sound variable</td>
</tr>
<tr class="even">
<td align="left">CVAR_GUI</td>
<td align="left"></td>
<td align="left">gui variable</td>
</tr>
<tr class="odd">
<td align="left">CVAR_GAME</td>
<td align="left"></td>
<td align="left">game variable</td>
</tr>
<tr class="even">
<td align="left">CVAR_TOOL</td>
<td align="left"></td>
<td align="left">tool variable</td>
</tr>
<tr class="odd">
<td align="left">CVAR_USERINFO</td>
<td align="left"></td>
<td align="left">sent to servers, available to menu</td>
</tr>
<tr class="even">
<td align="left">CVAR_SERVERINFO</td>
<td align="left"></td>
<td align="left">sent from servers, available to menu</td>
</tr>
<tr class="odd">
<td align="left">CVAR_NETWORKSYNC</td>
<td align="left"></td>
<td align="left">cvar is synced from the server to clients</td>
</tr>
<tr class="even">
<td align="left">CVAR_STATIC</td>
<td align="left">X</td>
<td align="left">statically declared, not user created</td>
</tr>
<tr class="odd">
<td align="left">CVAR_CHEAT</td>
<td align="left">X</td>
<td align="left">variable is considered a cheat</td>
</tr>
<tr class="even">
<td align="left">CVAR_NOCHEAT</td>
<td align="left"></td>
<td align="left">variable is not considered a cheat</td>
</tr>
<tr class="odd">
<td align="left">CVAR_INIT</td>
<td align="left"></td>
<td align="left">can only be set from the command-line</td>
</tr>
<tr class="even">
<td align="left">CVAR_ROM</td>
<td align="left"></td>
<td align="left">display only, cannot be set by user at all</td>
</tr>
<tr class="odd">
<td align="left">CVAR_ARCHIVE</td>
<td align="left"></td>
<td align="left">set to cause it to be saved to a config file</td>
</tr>
<tr class="even">
<td align="left">CVAR_MODIFIED</td>
<td align="left">X</td>
<td align="left">set when the variable is modified</td>
</tr>
</tbody>
</table>

Notes
-----

This CVar should always be enabled to reduce the number of polygons processed by the graphics card when they are not visible through visportals. This optimisation does not function when in [windowed](R_fullscreen_%28cvar%29 "R fullscreen (cvar)") mode. Despite this optimisation those polygons are still batched by the CPU and sent to the GPU, just not drawn; it is therefor recommended turning it off when testing polycounts with the [r\_showTris](R_showTris_%28cvar%29 "R showTris (cvar)") CVar.

This CVar also makes a big difference to **light count** - if r\_usescissor is disabled, the lightcount for a whole polygon will be equal to the number of lights that touch that polygon at any point. If r\_usescissor is enabled, the lightcount will increase only within the portion of the polygon that is contained within the light's own scissor rectangle (approximately equal to the light volume projected into screen space).

Note that the r\_usescissor cvar is automatically set to 0 when the [screenshot](Screenshot_%28console_command%29 "Screenshot (console command)") command is given, and is reset to 1 (whether or not it was 1 initially) immediately after the screenshot is written to disk. This has two effects: the view with scissors enabled cannot be captured, and the cvar will become activated after a screenshot.


